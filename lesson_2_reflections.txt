What happens when you initialize a repository? Why do you need to do it?
/----------------------------------------------------------------------/

It creates hidden folder called .git, where all the information about the 
repository and history of tracked files will be stored. It does not, however, 
make any commit.

How is the staging area different from the working directory and the 
repository? What value do you think it offers?
/----------------------------------------------------------------------/

It contains files that will be commited in the next commit. It offers to 
separate files that I want to updae n the next commit instead of commiting all
files in my working directory.

How can you use the staging area to make sure you have one commit per 
logical change?
/---------------------------------------------------------------------/
I can run diff on files in staging area and working directory or staging area
and latest commit.

What are some situations when branches would be helpful in keeping your 
history organized? How would branches help?
/----------------------------------------------------------------------/
Eg. when I want to add some experimental feature into project. It would be
nice to have branches because I can keep developing of the experimental
featre separate from the production code.

How do the diagrams help you visualize the branch structure?
/----------------------------------------------------------------------/
I can easyly see parent of any commit and reachebla and unreachable commits
from branches.

What is the result of merging two branches together? Why do we represent it
in the diagram the way we do?
/-----------------------------------------------------------------------/
The result is single branch which includes all commits in all merged branches
sorted by timestamp.